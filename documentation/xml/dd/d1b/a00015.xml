<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.2">
  <compounddef id="dd/d1b/a00015" kind="file">
    <compoundname>NN.cpp</compoundname>
    <includes refid="d2/de7/a00014" local="no">NeuralNetwork.h</includes>
    <incdepgraph>
      <node id="581">
        <label>stdlib.h</label>
      </node>
      <node id="576">
        <label>General_Notation.h</label>
        <link refid="d4/dee/a00008"/>
        <childnode refid="577" relation="include">
        </childnode>
        <childnode refid="578" relation="include">
        </childnode>
        <childnode refid="579" relation="include">
        </childnode>
        <childnode refid="580" relation="include">
        </childnode>
        <childnode refid="581" relation="include">
        </childnode>
        <childnode refid="582" relation="include">
        </childnode>
        <childnode refid="583" relation="include">
        </childnode>
        <childnode refid="584" relation="include">
        </childnode>
        <childnode refid="585" relation="include">
        </childnode>
        <childnode refid="586" relation="include">
        </childnode>
        <childnode refid="587" relation="include">
        </childnode>
      </node>
      <node id="584">
        <label>cmath</label>
      </node>
      <node id="587">
        <label>string</label>
      </node>
      <node id="585">
        <label>map</label>
      </node>
      <node id="579">
        <label>fstream</label>
      </node>
      <node id="583">
        <label>vector</label>
      </node>
      <node id="582">
        <label>utility</label>
      </node>
      <node id="578">
        <label>sstream</label>
      </node>
      <node id="577">
        <label>iostream</label>
      </node>
      <node id="575">
        <label>NeuralNetwork.h</label>
        <link refid="d2/de7/a00014"/>
        <childnode refid="576" relation="include">
        </childnode>
      </node>
      <node id="580">
        <label>stdio.h</label>
      </node>
      <node id="586">
        <label>cstring</label>
      </node>
      <node id="574">
        <label>phenogene/NN.cpp</label>
        <link refid="NN.cpp"/>
        <childnode refid="575" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="dd/d1b/a00015_1aa56c9494c95edf68386375e97d64159b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double pow</definition>
        <argsstring>(double x, double y)</argsstring>
        <name>pow</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Calculates the power of x to y. </para>        </briefdescription>
        <detaileddescription>
<para>Overwrites math::pow(double,double) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/blanqesto/workspace/phenogene/phenogene/NN.cpp" line="28" bodyfile="/home/blanqesto/workspace/phenogene/phenogene/NN.cpp" bodystart="27" bodyend="32"/>
        <referencedby refid="d1/d7c/a00003_1a38193cc61e9affbd077c1c6089fd0889" compoundref="dd/d1b/a00015" startline="153" endline="174">Neural_Network::test</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;<ref refid="d2/de7/a00014" kindref="compound">NeuralNetwork.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="7" refid="d1/d7c/a00003_1acd3d4762d71d54422b45fda3a13976cf" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d1/d7c/a00003_1acd3d4762d71d54422b45fda3a13976cf" kindref="member" tooltip="Train or test the network.">Neural_Network::do_function</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>what)</highlight></codeline>
<codeline lineno="8"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(what)</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>5:</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/d7c/a00003_1a033f4f60812c0359cc50815e957f11f7" kindref="member" tooltip="Train the neural network:">train</ref>();</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>6:</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/d7c/a00003_1a38193cc61e9affbd077c1c6089fd0889" kindref="member" tooltip="Test the neural network.">test</ref>();</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="21"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="dd/d1b/a00015_1aa56c9494c95edf68386375e97d64159b" refkind="member"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="dd/d1b/a00015_1aa56c9494c95edf68386375e97d64159b" kindref="member" tooltip="Calculates the power of x to y.">pow</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>y;<sp/>i++)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x*=x;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x;</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="d1/d7c/a00003_1a7a8eff736645e4101ed906a46e6a27ac" refkind="member"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d1/d7c/a00003_1a7a8eff736645e4101ed906a46e6a27ac" kindref="member" tooltip="Calculates the segmoidal/segmoidal inverse of a double [x].">Neural_Network::segmoidal_fn</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode)</highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>out<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mode<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//out<sp/>=<sp/>1/(1+(1/pow(2.7182,x)));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x*=-1;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>=<sp/>1/1+exp(x);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mode<sp/>==<sp/>1)<sp/></highlight><highlight class="comment">//derivation<sp/>of<sp/>segmoidal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>=<sp/>x*(1-x);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="d1/d7c/a00003_1ac86567c994bb671c20ed50316d268d3b" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d1/d7c/a00003_1ac86567c994bb671c20ed50316d268d3b" kindref="member" tooltip="Initialize weights and biases with values between -0.5 and 0.5.">Neural_Network::init</ref>()</highlight></codeline>
<codeline lineno="56"><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/dee/a00008_1a4da775651e53db9851982557af6b2b3f" kindref="member">fori</ref>(0,<ref refid="d1/d7c/a00003_1a053d2b510e07b1f25ef112f366bc62ba" kindref="member">output_len</ref>)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/><sp/>-0.5<sp/>+<sp/>(double)rand()/((double)RAND_MAX);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/d7c/a00003_1a8f26363ac0ccda6f04df35e68164cd3a" kindref="member">bias_O</ref>[i]=r;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/dee/a00008_1a675ae13246328abd54086989d58ba876" kindref="member">forj</ref>(0,<ref refid="d1/d7c/a00003_1a71cc8ca03da47fe639dd1e8ed518069c" kindref="member">hidden_len</ref>)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/><sp/>-0.5<sp/>+<sp/>(double)rand()/((double)RAND_MAX);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/d7c/a00003_1ad6730ce7c9fc3937299dd32473b12d1d" kindref="member">Wo</ref>[i][j]=r;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/dee/a00008_1a4da775651e53db9851982557af6b2b3f" kindref="member">fori</ref>(0,<ref refid="d1/d7c/a00003_1a71cc8ca03da47fe639dd1e8ed518069c" kindref="member">hidden_len</ref>)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/><sp/>-0.5<sp/>+<sp/>(double)rand()/((double)RAND_MAX);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/d7c/a00003_1a38808438a02d406a7ab54c8bf825752a" kindref="member">bias_H</ref>[i]=r;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/dee/a00008_1a675ae13246328abd54086989d58ba876" kindref="member">forj</ref>(0,<ref refid="d1/d7c/a00003_1a9e5319bf385fa55bbbd8f0160915306d" kindref="member">input_len</ref>)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/><sp/>-0.5<sp/>+<sp/>(double)rand()/((double)RAND_MAX);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/d7c/a00003_1a45dfc138d645e05eaeaa6ca6bb3df818" kindref="member">Wh</ref>[i][j]=r;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="d1/d7c/a00003_1a033f4f60812c0359cc50815e957f11f7" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d1/d7c/a00003_1a033f4f60812c0359cc50815e957f11f7" kindref="member" tooltip="Train the neural network:">Neural_Network::train</ref>()</highlight></codeline>
<codeline lineno="90"><highlight class="normal">{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d1/d7c/a00003_1ac86567c994bb671c20ed50316d268d3b" kindref="member" tooltip="Initialize weights and biases with values between -0.5 and 0.5.">init</ref>();<sp/></highlight><highlight class="comment">//initialize<sp/>weights,bias</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iterations<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//int<sp/>mismatch=1000000;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//while(mismatch<sp/>&gt;<sp/>(0.75*dataset_size)<sp/>&amp;&amp;<sp/>iterations<sp/>&lt;<sp/>max_iterations)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>iterations<sp/>++<sp/>;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//mismatch<sp/>=<sp/>0.0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>prevError=10001.1;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>double<sp/>best_error;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>double<sp/>best_lr;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>int<sp/>n_mismatch;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d1/d7c/a00003_1a2ffe42aee798e268d4bbf0f3428ba430" kindref="member">error</ref><sp/>=<sp/>100000;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//for<sp/>(int<sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>130;<sp/>n++)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/d7c/a00003_1a2ffe42aee798e268d4bbf0f3428ba430" kindref="member">error</ref><sp/>=<sp/>10000.0;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/d7c/a00003_1a2ffe42aee798e268d4bbf0f3428ba430" kindref="member">error</ref><sp/>=<sp/>10000.0;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;min_err&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="d1/d7c/a00003_1aa2898d2ec7ac091b6d40916d4b113a93" kindref="member">minimum_error</ref><sp/>&lt;&lt;<sp/>endl<sp/>&lt;&lt;<sp/>endl<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="d1/d7c/a00003_1a2ffe42aee798e268d4bbf0f3428ba430" kindref="member">error</ref><sp/>&gt;<sp/><ref refid="d1/d7c/a00003_1aa2898d2ec7ac091b6d40916d4b113a93" kindref="member">minimum_error</ref><sp/>&amp;&amp;<sp/><ref refid="d1/d7c/a00003_1a2ffe42aee798e268d4bbf0f3428ba430" kindref="member">error</ref><sp/>&lt;<sp/>prevError<sp/>&amp;&amp;<sp/>iterations<sp/>&lt;<sp/><ref refid="d1/d7c/a00003_1ac3c1eed9835dc5da84132d08c090612f" kindref="member">max_iterations</ref>)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iterations<sp/>++<sp/>;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prevError<sp/>=<sp/><ref refid="d1/d7c/a00003_1a2ffe42aee798e268d4bbf0f3428ba430" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/d7c/a00003_1a2ffe42aee798e268d4bbf0f3428ba430" kindref="member">error</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/dee/a00008_1af720a63ca4d8b6a2dd848ead73362e58" kindref="member">fork</ref>(0,<sp/><ref refid="d1/d7c/a00003_1a8fe39196b36a38696abd679328dd8232" kindref="member">dataset_size</ref>)</highlight><highlight class="comment">//dataset_size);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout<sp/>&lt;&lt;<sp/>k<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>current<sp/>dataset<sp/>of<sp/>input<sp/>and<sp/>expected<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/dee/a00008_1a4da775651e53db9851982557af6b2b3f" kindref="member">fori</ref>(0,<ref refid="d1/d7c/a00003_1a9e5319bf385fa55bbbd8f0160915306d" kindref="member">input_len</ref>)<sp/><ref refid="d1/d7c/a00003_1a347a1fceb1ac048ecd913a89126cebb3" kindref="member">input</ref>[i]=<ref refid="d1/d7c/a00003_1a81bab51b36643c5b10ba25d518c27ff3" kindref="member">input_dataset</ref>[k][i];</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/dee/a00008_1a4da775651e53db9851982557af6b2b3f" kindref="member">fori</ref>(0,<ref refid="d1/d7c/a00003_1a053d2b510e07b1f25ef112f366bc62ba" kindref="member">output_len</ref>)<sp/><ref refid="d1/d7c/a00003_1a8d632cf69d2fcd076e473aba1ae74702" kindref="member">expected_o</ref>[i]=<ref refid="d1/d7c/a00003_1aa8441449f55f07c3da384d81608373b5" kindref="member">output_dataset</ref>[k][i];</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//fori(0,input_len)<sp/>cout<sp/>&lt;&lt;<sp/>input[i]<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//fori(0,output_len)<sp/>cout<sp/>&lt;&lt;<sp/>expected_o[i]<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if(input_absent())continue;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Propagate<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/d7c/a00003_1a7e6d776ecfbb4f9df682d5fe13a7ec3b" kindref="member" tooltip="Propagate input starting from the input layer up to the output layer. Uses softmax activation functio...">propagate</ref>();</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>Error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/d7c/a00003_1a2ffe42aee798e268d4bbf0f3428ba430" kindref="member">error</ref>+=<ref refid="d1/d7c/a00003_1a3e503ddab5bbc51f6e0b79b67ca6ed2f" kindref="member" tooltip="Calculate the error signal for each node. Uses corss entropy error function.">cal_error</ref>();</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Back<sp/>propagagte<sp/>the<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/d7c/a00003_1a5a0cac77d13e3ffdd3088cb684d39859" kindref="member" tooltip="Back propagate the error starting from the output layer down to the input layer.">back_propagate</ref>();</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/d7c/a00003_1a2ffe42aee798e268d4bbf0f3428ba430" kindref="member">error</ref>/=<ref refid="d1/d7c/a00003_1a8fe39196b36a38696abd679328dd8232" kindref="member">dataset_size</ref>;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(error&lt;prev_error)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;Found<sp/>optimal!&quot;<sp/>&lt;&lt;<sp/>n<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_error<sp/>=<sp/>error;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_lr<sp/>=<sp/>learning_rate;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>learning_rate+=0.001;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;Optimals:\nError=<sp/>&quot;<sp/>&lt;&lt;<sp/>best_error<sp/>&lt;&lt;<sp/>endl<sp/>&lt;&lt;<sp/>&quot;learning<sp/>rate=<sp/>&quot;<sp/>&lt;&lt;<sp/>best_lr<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="153" refid="d1/d7c/a00003_1a38193cc61e9affbd077c1c6089fd0889" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d1/d7c/a00003_1a38193cc61e9affbd077c1c6089fd0889" kindref="member" tooltip="Test the neural network.">Neural_Network::test</ref>()</highlight></codeline>
<codeline lineno="154"><highlight class="normal">{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d1/d7c/a00003_1a2ffe42aee798e268d4bbf0f3428ba430" kindref="member">error</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d1/d7c/a00003_1aa8441449f55f07c3da384d81608373b5" kindref="member">output_dataset</ref>.clear();</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d1/d7c/a00003_1aa8441449f55f07c3da384d81608373b5" kindref="member">output_dataset</ref>.resize(<ref refid="d1/d7c/a00003_1a8fe39196b36a38696abd679328dd8232" kindref="member">dataset_size</ref>);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/dee/a00008_1af720a63ca4d8b6a2dd848ead73362e58" kindref="member">fork</ref>(0,<ref refid="d1/d7c/a00003_1a8fe39196b36a38696abd679328dd8232" kindref="member">dataset_size</ref>)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>current<sp/>dataset<sp/>of<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/dee/a00008_1a4da775651e53db9851982557af6b2b3f" kindref="member">fori</ref>(0,<ref refid="d1/d7c/a00003_1a9e5319bf385fa55bbbd8f0160915306d" kindref="member">input_len</ref>)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/d7c/a00003_1a347a1fceb1ac048ecd913a89126cebb3" kindref="member">input</ref>[i]=<ref refid="d1/d7c/a00003_1a81bab51b36643c5b10ba25d518c27ff3" kindref="member">input_dataset</ref>[k][i];</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>Output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/d7c/a00003_1a7e6d776ecfbb4f9df682d5fe13a7ec3b" kindref="member" tooltip="Propagate input starting from the input layer up to the output layer. Uses softmax activation functio...">propagate</ref>();</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>Error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/dee/a00008_1a4da775651e53db9851982557af6b2b3f" kindref="member">fori</ref>(0,<ref refid="d1/d7c/a00003_1a053d2b510e07b1f25ef112f366bc62ba" kindref="member">output_len</ref>)</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/d7c/a00003_1a2ffe42aee798e268d4bbf0f3428ba430" kindref="member">error</ref><sp/>+=<sp/><ref refid="dd/d1b/a00015_1aa56c9494c95edf68386375e97d64159b" kindref="member" tooltip="Calculates the power of x to y.">pow</ref>((<ref refid="d1/d7c/a00003_1abe5631cce6141b7756154a5a9d247da2" kindref="member">output</ref>[i]-<ref refid="d1/d7c/a00003_1a8d632cf69d2fcd076e473aba1ae74702" kindref="member">expected_o</ref>[i]),2);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/d7c/a00003_1aa8441449f55f07c3da384d81608373b5" kindref="member">output_dataset</ref>[k].resize(<ref refid="d1/d7c/a00003_1a053d2b510e07b1f25ef112f366bc62ba" kindref="member">output_len</ref>);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/dee/a00008_1a675ae13246328abd54086989d58ba876" kindref="member">forj</ref>(0,<ref refid="d1/d7c/a00003_1a053d2b510e07b1f25ef112f366bc62ba" kindref="member">output_len</ref>)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/d7c/a00003_1aa8441449f55f07c3da384d81608373b5" kindref="member">output_dataset</ref>[k][j]=<ref refid="d1/d7c/a00003_1abe5631cce6141b7756154a5a9d247da2" kindref="member">output</ref>[j];</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d1/d7c/a00003_1a2ffe42aee798e268d4bbf0f3428ba430" kindref="member">error</ref>*=0.5;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="184" refid="d1/d7c/a00003_1a7e6d776ecfbb4f9df682d5fe13a7ec3b" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d1/d7c/a00003_1a7e6d776ecfbb4f9df682d5fe13a7ec3b" kindref="member" tooltip="Propagate input starting from the input layer up to the output layer. Uses softmax activation functio...">Neural_Network::propagate</ref>()</highlight></codeline>
<codeline lineno="185"><highlight class="normal">{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>fill_n(<ref refid="d1/d7c/a00003_1a5b31deacdc5c63e687d6ebc086b761ab" kindref="member">hidden</ref>,<sp/><ref refid="d1/d7c/a00003_1a71cc8ca03da47fe639dd1e8ed518069c" kindref="member">hidden_len</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>fill_n(<ref refid="d1/d7c/a00003_1abe5631cce6141b7756154a5a9d247da2" kindref="member">output</ref>,<sp/><ref refid="d1/d7c/a00003_1a053d2b510e07b1f25ef112f366bc62ba" kindref="member">output_len</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>max<sp/>=<sp/>-1000.0;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>maxO<sp/>=<sp/>-1000.0;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Calculate<sp/>the<sp/>net<sp/>(weights<sp/>x<sp/>input)*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d1/d7c/a00003_1a25df8564c3f26b64935464366055572e" kindref="member" tooltip="Calculates the net for each node.">calculate_net</ref>(max,maxO);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>exp_HT=0.0;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>exp_OT=0.0;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Softmax<sp/>activation<sp/>function*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/dee/a00008_1a4da775651e53db9851982557af6b2b3f" kindref="member">fori</ref>(0,<ref refid="d1/d7c/a00003_1a71cc8ca03da47fe639dd1e8ed518069c" kindref="member">hidden_len</ref>)<sp/>exp_HT+=<ref refid="d1/d7c/a00003_1a5b31deacdc5c63e687d6ebc086b761ab" kindref="member">hidden</ref>[i]=exp(<ref refid="d1/d7c/a00003_1aa07e5b1f8997f895d7550495a5b4f0d2" kindref="member">netH</ref>[i]);</highlight><highlight class="comment">//-max);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/dee/a00008_1a4da775651e53db9851982557af6b2b3f" kindref="member">fori</ref>(0,<ref refid="d1/d7c/a00003_1a053d2b510e07b1f25ef112f366bc62ba" kindref="member">output_len</ref>)<sp/>exp_OT+=<ref refid="d1/d7c/a00003_1abe5631cce6141b7756154a5a9d247da2" kindref="member">output</ref>[i]=exp(<ref refid="d1/d7c/a00003_1a8bcf19afde3c08afbd862759c839a769" kindref="member">netO</ref>[i]);</highlight><highlight class="comment">//-maxO);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cout<sp/>&lt;&lt;<sp/>exp_HT<sp/>&lt;&lt;<sp/>&quot;:HELLO:&quot;<sp/>&lt;&lt;<sp/>exp_OT<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/dee/a00008_1a4da775651e53db9851982557af6b2b3f" kindref="member">fori</ref>(0,<ref refid="d1/d7c/a00003_1a71cc8ca03da47fe639dd1e8ed518069c" kindref="member">hidden_len</ref>)<sp/><ref refid="d1/d7c/a00003_1a5b31deacdc5c63e687d6ebc086b761ab" kindref="member">hidden</ref>[i]=<ref refid="d1/d7c/a00003_1a5b31deacdc5c63e687d6ebc086b761ab" kindref="member">hidden</ref>[i]/exp_HT;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/dee/a00008_1a4da775651e53db9851982557af6b2b3f" kindref="member">fori</ref>(0,<ref refid="d1/d7c/a00003_1a053d2b510e07b1f25ef112f366bc62ba" kindref="member">output_len</ref>)<sp/><ref refid="d1/d7c/a00003_1abe5631cce6141b7756154a5a9d247da2" kindref="member">output</ref>[i]=<ref refid="d1/d7c/a00003_1abe5631cce6141b7756154a5a9d247da2" kindref="member">output</ref>[i]/exp_OT;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>fori(0,hidden_len)<sp/>cout<sp/>&lt;&lt;<sp/>hidden[i]<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>fori(0,output_len)<sp/>cout<sp/>&lt;&lt;<sp/>output[i]<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//fori(0,hidden_len)<sp/>cout<sp/>&lt;&lt;<sp/>hidden[i]<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//fori(0,output_len)<sp/>cout<sp/>&lt;&lt;<sp/>output[i]<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="212"><highlight class="normal">}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="222" refid="d1/d7c/a00003_1a5a0cac77d13e3ffdd3088cb684d39859" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d1/d7c/a00003_1a5a0cac77d13e3ffdd3088cb684d39859" kindref="member" tooltip="Back propagate the error starting from the output layer down to the input layer.">Neural_Network::back_propagate</ref>()</highlight></codeline>
<codeline lineno="223"><highlight class="normal">{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bias<sp/>update</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/dee/a00008_1a4da775651e53db9851982557af6b2b3f" kindref="member">fori</ref>(0,<ref refid="d1/d7c/a00003_1a053d2b510e07b1f25ef112f366bc62ba" kindref="member">output_len</ref>)</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/d7c/a00003_1a8f26363ac0ccda6f04df35e68164cd3a" kindref="member">bias_O</ref>[i]-=(<ref refid="d1/d7c/a00003_1a1994986029a1ef9d55fa4bb1b440210b" kindref="member">learning_rate</ref>*<ref refid="d1/d7c/a00003_1ae5f829ba5e65ae91d5c4feda5f66e37a" kindref="member">delta_O</ref>[i])+(<ref refid="d1/d7c/a00003_1a3a3ea713384da26e538bc60da8410a75" kindref="member">momentum</ref>*<ref refid="d1/d7c/a00003_1a8f26363ac0ccda6f04df35e68164cd3a" kindref="member">bias_O</ref>[i]);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/dee/a00008_1a4da775651e53db9851982557af6b2b3f" kindref="member">fori</ref>(0,<ref refid="d1/d7c/a00003_1a71cc8ca03da47fe639dd1e8ed518069c" kindref="member">hidden_len</ref>)</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/d7c/a00003_1a38808438a02d406a7ab54c8bf825752a" kindref="member">bias_H</ref>[i]-=(<ref refid="d1/d7c/a00003_1a1994986029a1ef9d55fa4bb1b440210b" kindref="member">learning_rate</ref>*<ref refid="d1/d7c/a00003_1a51e5c2d2b53ba284c5b3791446c3b7d8" kindref="member">delta_H</ref>[i])+(<ref refid="d1/d7c/a00003_1a3a3ea713384da26e538bc60da8410a75" kindref="member">momentum</ref>*<ref refid="d1/d7c/a00003_1a38808438a02d406a7ab54c8bf825752a" kindref="member">bias_H</ref>[i]);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>output<sp/>weights<sp/>update</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/dee/a00008_1a4da775651e53db9851982557af6b2b3f" kindref="member">fori</ref>(0,<ref refid="d1/d7c/a00003_1a053d2b510e07b1f25ef112f366bc62ba" kindref="member">output_len</ref>)</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/dee/a00008_1a675ae13246328abd54086989d58ba876" kindref="member">forj</ref>(0,<ref refid="d1/d7c/a00003_1a71cc8ca03da47fe639dd1e8ed518069c" kindref="member">hidden_len</ref>)</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/d7c/a00003_1ad6730ce7c9fc3937299dd32473b12d1d" kindref="member">Wo</ref>[i][j]-=(<ref refid="d1/d7c/a00003_1a1994986029a1ef9d55fa4bb1b440210b" kindref="member">learning_rate</ref>*<ref refid="d1/d7c/a00003_1ae5f829ba5e65ae91d5c4feda5f66e37a" kindref="member">delta_O</ref>[i]*<ref refid="d1/d7c/a00003_1a5b31deacdc5c63e687d6ebc086b761ab" kindref="member">hidden</ref>[j])<sp/>+<sp/>(<ref refid="d1/d7c/a00003_1a3a3ea713384da26e538bc60da8410a75" kindref="member">momentum</ref>*<ref refid="d1/d7c/a00003_1ad6730ce7c9fc3937299dd32473b12d1d" kindref="member">Wo</ref>[i][j]);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>hidden<sp/>weights<sp/>update</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/dee/a00008_1a4da775651e53db9851982557af6b2b3f" kindref="member">fori</ref>(0,<ref refid="d1/d7c/a00003_1a71cc8ca03da47fe639dd1e8ed518069c" kindref="member">hidden_len</ref>)</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/dee/a00008_1a675ae13246328abd54086989d58ba876" kindref="member">forj</ref>(0,<ref refid="d1/d7c/a00003_1a9e5319bf385fa55bbbd8f0160915306d" kindref="member">input_len</ref>)</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/d7c/a00003_1a45dfc138d645e05eaeaa6ca6bb3df818" kindref="member">Wh</ref>[i][j]-=(<ref refid="d1/d7c/a00003_1a1994986029a1ef9d55fa4bb1b440210b" kindref="member">learning_rate</ref>*<ref refid="d1/d7c/a00003_1a51e5c2d2b53ba284c5b3791446c3b7d8" kindref="member">delta_H</ref>[i]*<ref refid="d1/d7c/a00003_1a347a1fceb1ac048ecd913a89126cebb3" kindref="member">input</ref>[j])<sp/>+<sp/>(<ref refid="d1/d7c/a00003_1a3a3ea713384da26e538bc60da8410a75" kindref="member">momentum</ref>*<ref refid="d1/d7c/a00003_1a45dfc138d645e05eaeaa6ca6bb3df818" kindref="member">Wh</ref>[i][j]);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="250" refid="d1/d7c/a00003_1a3e503ddab5bbc51f6e0b79b67ca6ed2f" refkind="member"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d1/d7c/a00003_1a3e503ddab5bbc51f6e0b79b67ca6ed2f" kindref="member" tooltip="Calculate the error signal for each node. Uses corss entropy error function.">Neural_Network::cal_error</ref>()</highlight></codeline>
<codeline lineno="251"><highlight class="normal">{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>fill_n(<ref refid="d1/d7c/a00003_1ae5f829ba5e65ae91d5c4feda5f66e37a" kindref="member">delta_O</ref>,<ref refid="d1/d7c/a00003_1a053d2b510e07b1f25ef112f366bc62ba" kindref="member">output_len</ref>,0);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>fill_n(<ref refid="d1/d7c/a00003_1a51e5c2d2b53ba284c5b3791446c3b7d8" kindref="member">delta_H</ref>,<ref refid="d1/d7c/a00003_1a71cc8ca03da47fe639dd1e8ed518069c" kindref="member">hidden_len</ref>,0);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>total_error<sp/>=<sp/>0.0,<sp/>temp<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>max<sp/>=<sp/>-1000;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>maxO<sp/>=<sp/>-1000;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Calculate<sp/>the<sp/>net<sp/>(weights<sp/>x<sp/>input)*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d1/d7c/a00003_1a25df8564c3f26b64935464366055572e" kindref="member" tooltip="Calculates the net for each node.">calculate_net</ref>(max,maxO);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>error<sp/>signal<sp/>for<sp/>output<sp/>layer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/dee/a00008_1a4da775651e53db9851982557af6b2b3f" kindref="member">fori</ref>(0,<ref refid="d1/d7c/a00003_1a053d2b510e07b1f25ef112f366bc62ba" kindref="member">output_len</ref>)</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//temp<sp/>=<sp/>log(netO[i]+maxO);//-maxO);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout<sp/>&lt;&lt;<sp/>temp<sp/>&lt;&lt;<sp/>&quot;::&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/d7c/a00003_1ae5f829ba5e65ae91d5c4feda5f66e37a" kindref="member">delta_O</ref>[i]<sp/>=<sp/>(<ref refid="d1/d7c/a00003_1abe5631cce6141b7756154a5a9d247da2" kindref="member">output</ref>[i]-<ref refid="d1/d7c/a00003_1a8d632cf69d2fcd076e473aba1ae74702" kindref="member">expected_o</ref>[i]);</highlight><highlight class="comment">//expected_o[i]*log(output[i]+0.001)+(1-expected_o[i])*log(1-output[i]+0.001);//*temp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/><ref refid="d1/d7c/a00003_1a8d632cf69d2fcd076e473aba1ae74702" kindref="member">expected_o</ref>[i]*log(<ref refid="d1/d7c/a00003_1abe5631cce6141b7756154a5a9d247da2" kindref="member">output</ref>[i])+(1-<ref refid="d1/d7c/a00003_1a8d632cf69d2fcd076e473aba1ae74702" kindref="member">expected_o</ref>[i])*log(1-<ref refid="d1/d7c/a00003_1abe5631cce6141b7756154a5a9d247da2" kindref="member">output</ref>[i]);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total_error<sp/>+=<sp/>temp;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>total_error/=-<ref refid="d1/d7c/a00003_1a053d2b510e07b1f25ef112f366bc62ba" kindref="member">output_len</ref>;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>total_error=pow(total_error,2.0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>total_error*=0.5;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>error<sp/>signal<sp/>for<sp/>hidden<sp/>layer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/dee/a00008_1a4da775651e53db9851982557af6b2b3f" kindref="member">fori</ref>(0,<ref refid="d1/d7c/a00003_1a71cc8ca03da47fe639dd1e8ed518069c" kindref="member">hidden_len</ref>)</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/dee/a00008_1a675ae13246328abd54086989d58ba876" kindref="member">forj</ref>(0,<ref refid="d1/d7c/a00003_1a053d2b510e07b1f25ef112f366bc62ba" kindref="member">output_len</ref>)</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>+=<sp/><ref refid="d1/d7c/a00003_1ae5f829ba5e65ae91d5c4feda5f66e37a" kindref="member">delta_O</ref>[j]*<ref refid="d1/d7c/a00003_1ad6730ce7c9fc3937299dd32473b12d1d" kindref="member">Wo</ref>[j][i];</highlight><highlight class="comment">//log(netH[i]+max);//-max)*delta_O[j];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout<sp/>&lt;&lt;<sp/>temp<sp/>&lt;&lt;<sp/>&quot;:&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/d7c/a00003_1a51e5c2d2b53ba284c5b3791446c3b7d8" kindref="member">delta_H</ref>[i]<sp/>=<sp/>temp;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(total_error);</highlight></codeline>
<codeline lineno="282"><highlight class="normal">}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="290" refid="d1/d7c/a00003_1a25df8564c3f26b64935464366055572e" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d1/d7c/a00003_1a25df8564c3f26b64935464366055572e" kindref="member" tooltip="Calculates the net for each node.">Neural_Network::calculate_net</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;max,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;maxO)</highlight></codeline>
<codeline lineno="291"><highlight class="normal">{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>max<sp/>=<sp/>-1000.0;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>maxO<sp/>=<sp/>-1000.0;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>fill_n(<ref refid="d1/d7c/a00003_1aa07e5b1f8997f895d7550495a5b4f0d2" kindref="member">netH</ref>,<ref refid="d1/d7c/a00003_1a71cc8ca03da47fe639dd1e8ed518069c" kindref="member">hidden_len</ref>,0);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>fill_n(<ref refid="d1/d7c/a00003_1a8bcf19afde3c08afbd862759c839a769" kindref="member">netO</ref>,<ref refid="d1/d7c/a00003_1a053d2b510e07b1f25ef112f366bc62ba" kindref="member">output_len</ref>,0);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Calculate<sp/>the<sp/>net<sp/>(weights<sp/>x<sp/>input)*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/dee/a00008_1a4da775651e53db9851982557af6b2b3f" kindref="member">fori</ref><sp/>(0,<ref refid="d1/d7c/a00003_1a71cc8ca03da47fe639dd1e8ed518069c" kindref="member">hidden_len</ref>)</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/dee/a00008_1a675ae13246328abd54086989d58ba876" kindref="member">forj</ref><sp/>(0,<ref refid="d1/d7c/a00003_1a9e5319bf385fa55bbbd8f0160915306d" kindref="member">input_len</ref>)<ref refid="d1/d7c/a00003_1aa07e5b1f8997f895d7550495a5b4f0d2" kindref="member">netH</ref>[i]<sp/>+=<sp/><ref refid="d1/d7c/a00003_1a347a1fceb1ac048ecd913a89126cebb3" kindref="member">input</ref>[j]*<ref refid="d1/d7c/a00003_1a45dfc138d645e05eaeaa6ca6bb3df818" kindref="member">Wh</ref>[i][j];</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d1/d7c/a00003_1aa07e5b1f8997f895d7550495a5b4f0d2" kindref="member">netH</ref>[i]&gt;max)max=<ref refid="d1/d7c/a00003_1aa07e5b1f8997f895d7550495a5b4f0d2" kindref="member">netH</ref>[i];</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/dee/a00008_1a4da775651e53db9851982557af6b2b3f" kindref="member">fori</ref><sp/>(0,<ref refid="d1/d7c/a00003_1a053d2b510e07b1f25ef112f366bc62ba" kindref="member">output_len</ref>)</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/dee/a00008_1a675ae13246328abd54086989d58ba876" kindref="member">forj</ref><sp/>(0,<ref refid="d1/d7c/a00003_1a71cc8ca03da47fe639dd1e8ed518069c" kindref="member">hidden_len</ref>)<sp/><ref refid="d1/d7c/a00003_1a8bcf19afde3c08afbd862759c839a769" kindref="member">netO</ref>[i]<sp/>+=<sp/><ref refid="d1/d7c/a00003_1aa07e5b1f8997f895d7550495a5b4f0d2" kindref="member">netH</ref>[j]*<ref refid="d1/d7c/a00003_1ad6730ce7c9fc3937299dd32473b12d1d" kindref="member">Wo</ref>[i][j];</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d1/d7c/a00003_1a8bcf19afde3c08afbd862759c839a769" kindref="member">netO</ref>[i]&gt;maxO)maxO=<ref refid="d1/d7c/a00003_1a8bcf19afde3c08afbd862759c839a769" kindref="member">netO</ref>[i];</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="309"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/blanqesto/workspace/phenogene/phenogene/NN.cpp"/>
  </compounddef>
</doxygen>
